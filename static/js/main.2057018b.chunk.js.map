{"version":3,"sources":["BooksAPI.js","components/Book.js","components/BooksGrid.js","components/BookShelf.js","components/ListBooks.js","components/SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","_ref","updateShelf","authorsText","authors","reduce","acc","a","i","length","react_default","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","e","target","disabled","title","BooksGrid","filter","b","map","key","components_Book","BookShelf","shelfName","components_BooksGrid","ListBooks","currentlyReading","wantToRead","readBooks","components_BookShelf","react_router_dom","to","SearchBooks","state","bookResults","updateQuery","q","_this","setState","searchBooks","trim","BooksAPI","results","error","_this2","this","_this$props","props","matchingBooks","find","r","showingBooks","m","type","placeholder","Component","BooksApp","prevState","_this3","react_router","exact","path","render","components_ListBooks","components_SearchBooks","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2057018b.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\n\n\nconst Book = ({ book, updateShelf }) => {\n\n    const authorsText = book.authors ?\n        book.authors.reduce((acc, a, i) => `${acc}, ${a}${i === book.authors.length - 1 ? '' : ','}`)\n        : null\n\n    return (<div className=\"book\">\n        <div className=\"book-top\">\n            <div className=\"book-cover\"\n                style={{ width: 128, height: 188, backgroundImage: `url(${book.imageLinks.thumbnail})` }}>\n            </div>\n            <div className=\"book-shelf-changer\">\n                <select\n                    value={book.shelf ? book.shelf : 'none'}\n                    onChange={(e) => updateShelf(book, e.target.value)}>\n                    <option value=\"move\" disabled>Move to...</option>\n                    <option value=\"currentlyReading\">Currently Reading</option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                </select>\n            </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">{authorsText}</div>\n    </div>);\n}\n\nexport default Book;\n","import React from 'react'\nimport Book from './Book'\n\n\nconst BooksGrid = ({ books, updateShelf }) => (\n    <ol className=\"books-grid\">\n        {books.filter(b => b.imageLinks).map(book => (\n            <li key={book.id}>\n                <Book book={book} updateShelf={updateShelf} />\n            </li>\n        ))}\n    </ol>\n)\n\nexport default BooksGrid;\n","import React from 'react'\nimport BooksGrid from './BooksGrid'\n\n\nconst BookShelf = ({ shelfName, books, updateShelf }) => (\n    <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{shelfName}</h2>\n        <div className=\"bookshelf-books\">\n            <BooksGrid books={books} updateShelf={updateShelf} />\n        </div>\n    </div>\n)\n\nexport default BookShelf;\n","import React from 'react'\nimport BookShelf from './BookShelf'\nimport { Link } from 'react-router-dom'\n\nconst ListBooks = ({ books, updateShelf }) => {\n    const currentlyReading = books.filter(book => book.shelf === \"currentlyReading\")\n    const wantToRead = books.filter(book => book.shelf === \"wantToRead\")\n    const readBooks = books.filter(book => book.shelf === \"read\")\n\n    return (\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n                <h1>NotMyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n                <BookShelf shelfName='Currently Reading' books={currentlyReading} updateShelf={updateShelf} />\n                <BookShelf shelfName='Want to Read' books={wantToRead} updateShelf={updateShelf} />\n                <BookShelf shelfName='Read' books={readBooks} updateShelf={updateShelf} />\n            </div>\n            <div className=\"open-search\">\n                <Link to='/search'>Add a book </Link>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ListBooks;\n","import React, { Component } from 'react'\nimport BooksGrid from './BooksGrid'\nimport * as BooksAPI from '../BooksAPI'\nimport { Link } from 'react-router-dom';\n\nclass SearchBooks extends Component {\n\n    state = {\n        query: '',\n        bookResults: [],\n    }\n\n    updateQuery = q => {\n        this.setState({ query: q });\n        this.searchBooks(q.trim());\n    };\n\n    searchBooks = query => {\n        if (query)\n            BooksAPI.search(query).then(results => {\n                if (results.error)\n                    this.setState({ bookResults: [] });\n                else\n                    this.setState({ bookResults: results });\n            })\n        else\n            this.setState({ bookResults: [] })\n    }\n\n    render() {\n        const { bookResults } = this.state;\n        const { books, updateShelf } = this.props;\n        const matchingBooks = books.filter(b => bookResults.find(r => r.id === b.id));\n        const showingBooks = bookResults.map(r => {\n            const book = matchingBooks.find(m => m.id === r.id);\n            return book ? { ...r, shelf: book.shelf } : r\n        })\n\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to='/'>Close</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input\n                            type=\"text\"\n                            value={this.state.query}\n                            onChange={(e) => this.updateQuery(e.target.value)}\n                            placeholder=\"Search by title or author\" />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <BooksGrid books={showingBooks} updateShelf={updateShelf} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default SearchBooks;\n","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport ListBooks from './components/ListBooks'\nimport SearchBooks from './components/SearchBooks'\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then(results => {\n      this.setState({ books: results });\n    })\n  }\n\n  updateShelf = (book, shelf) => {\n    this.setState(prevState => ({\n      books: (shelf === 'none')\n        ? prevState.books.filter(b => b.id !== book.id)\n        : prevState.books.filter(b => b.id !== book.id).concat([{ ...book, shelf: shelf }])\n    })\n    );\n    BooksAPI.update(book, shelf);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path='/' render={\n          () => <ListBooks books={this.state.books} updateShelf={this.updateShelf} />\n        }>\n\n        </Route>\n\n        <Route exact path='/search' render={\n          () => <SearchBooks books={this.state.books} updateShelf={this.updateShelf} />\n        }>\n\n        </Route>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}